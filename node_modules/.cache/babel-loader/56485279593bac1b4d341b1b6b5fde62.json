{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"; //import axios from \"axios\";\n\nexport const fetchTickets = createAsyncThunk('tickets/fetchTickets', // axios.get('https://api.npoint.io/163b5e66df9f2741243e')\n// .then(tickets => dispatch({\n//     type: FETCH_TICKETS,\n//     payload: tickets\n//     })\n// .catch(err)\nasync () => {\n  const response = await fetch('https://api.npoint.io/163b5e66df9f2741243e');\n  const formattedResponse = await response.json();\n  return formattedResponse;\n} // async () => {\n//     const response = await fetch('https://jsonplaceholder.typicode.com/posts/?_limit=6');\n//     const formattedResponse = await response.json();\n//     return formattedResponse;\n//}   \n);\nexport const ticketsSlice = createSlice({\n  name: 'tickets',\n  initialState: {\n    tickets: [],\n    isLoading: false\n  },\n  reducers: {\n    chooseCheap(state) {\n      state.tickets.sort((prev, next) => prev.price - next.price);\n    },\n\n    chooseFast(state) {}\n\n  },\n  extraReducers: {\n    [fetchTickets.pending]: state => {\n      state.isLoading = true;\n    },\n    [fetchTickets.fulfilled]: (state, action) => {\n      state.tickets = action.payload;\n      state.isLoading = false;\n    },\n    [fetchTickets]: state => {\n      state.isLoading = false;\n    },\n    [fetchTickets]: state => {\n      state.tickets.forEach(item => {\n        let unix = item.info.duration;\n        let date = new Intl.DateTimeFormat('en-US', {\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit'\n        }).format(unix); //9:27:16 PM\n\n        console.log(date);\n      });\n    }\n  }\n});\nexport default ticketsSlice.reducer;\nexport const {\n  chooseCheap\n} = ticketsSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchTickets","response","fetch","formattedResponse","json","ticketsSlice","name","initialState","tickets","isLoading","reducers","chooseCheap","state","sort","prev","next","price","chooseFast","extraReducers","pending","fulfilled","action","payload","forEach","item","unix","info","duration","date","Intl","DateTimeFormat","hour","minute","second","format","console","log","reducer","actions"],"sources":["/Users/artiomdeyev/Desktop/aviasales/src/ticketsState.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n//import axios from \"axios\";\n\nexport const fetchTickets = createAsyncThunk(\n    'tickets/fetchTickets',\n    // axios.get('https://api.npoint.io/163b5e66df9f2741243e')\n    // .then(tickets => dispatch({\n    //     type: FETCH_TICKETS,\n    //     payload: tickets\n    //     })\n    // .catch(err)\n\n    async () => {\n        const response = await fetch('https://api.npoint.io/163b5e66df9f2741243e');\n        const formattedResponse = await response.json();\n        return formattedResponse;\n    }   \n\n    // async () => {\n    //     const response = await fetch('https://jsonplaceholder.typicode.com/posts/?_limit=6');\n    //     const formattedResponse = await response.json();\n    //     return formattedResponse;\n    //}   \n)\n\nexport const ticketsSlice = createSlice({\n    name: 'tickets',\n    initialState: {\n        tickets: [],\n        isLoading: false,\n    },\n    reducers: {\n        chooseCheap(state) {\n            state.tickets.sort((prev, next) => prev.price - next.price);\n        },\n        chooseFast(state) {\n            \n        }\n    },\n    extraReducers: {\n        [fetchTickets.pending]: (state) => {\n            state.isLoading = true;\n        },\n        [fetchTickets.fulfilled]: (state, action) => {\n            state.tickets = action.payload;\n            state.isLoading = false;\n        },\n        [fetchTickets]: (state) => {\n            state.isLoading = false;\n        },\n        [fetchTickets]: (state) => {\n            state.tickets.forEach(item => {\n                let unix = item.info.duration;\n                let date = new Intl.DateTimeFormat('en-US', { hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(unix)//9:27:16 PM\n                console.log(date);\n            })\n        }\n    }\n});\n\nexport default ticketsSlice.reducer;\n\nexport const { chooseCheap } =ticketsSlice.actions;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C,C,CACA;;AAEA,OAAO,MAAMC,YAAY,GAAGD,gBAAgB,CACxC,sBADwC,EAExC;AACA;AACA;AACA;AACA;AACA;AAEA,YAAY;EACR,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;EACA,MAAMC,iBAAiB,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAhC;EACA,OAAOD,iBAAP;AACH,CAbuC,CAexC;AACA;AACA;AACA;AACA;AAnBwC,CAArC;AAsBP,OAAO,MAAME,YAAY,GAAGP,WAAW,CAAC;EACpCQ,IAAI,EAAE,SAD8B;EAEpCC,YAAY,EAAE;IACVC,OAAO,EAAE,EADC;IAEVC,SAAS,EAAE;EAFD,CAFsB;EAMpCC,QAAQ,EAAE;IACNC,WAAW,CAACC,KAAD,EAAQ;MACfA,KAAK,CAACJ,OAAN,CAAcK,IAAd,CAAmB,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACE,KAAL,GAAaD,IAAI,CAACC,KAArD;IACH,CAHK;;IAINC,UAAU,CAACL,KAAD,EAAQ,CAEjB;;EANK,CAN0B;EAcpCM,aAAa,EAAE;IACX,CAAClB,YAAY,CAACmB,OAAd,GAAyBP,KAAD,IAAW;MAC/BA,KAAK,CAACH,SAAN,GAAkB,IAAlB;IACH,CAHU;IAIX,CAACT,YAAY,CAACoB,SAAd,GAA0B,CAACR,KAAD,EAAQS,MAAR,KAAmB;MACzCT,KAAK,CAACJ,OAAN,GAAgBa,MAAM,CAACC,OAAvB;MACAV,KAAK,CAACH,SAAN,GAAkB,KAAlB;IACH,CAPU;IAQX,CAACT,YAAD,GAAiBY,KAAD,IAAW;MACvBA,KAAK,CAACH,SAAN,GAAkB,KAAlB;IACH,CAVU;IAWX,CAACT,YAAD,GAAiBY,KAAD,IAAW;MACvBA,KAAK,CAACJ,OAAN,CAAce,OAAd,CAAsBC,IAAI,IAAI;QAC1B,IAAIC,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,QAArB;QACA,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;UAAEC,IAAI,EAAE,SAAR;UAAmBC,MAAM,EAAE,SAA3B;UAAsCC,MAAM,EAAE;QAA9C,CAAjC,EAA4FC,MAA5F,CAAmGT,IAAnG,CAAX,CAF0B,CAEyF;;QACnHU,OAAO,CAACC,GAAR,CAAYR,IAAZ;MACH,CAJD;IAKH;EAjBU;AAdqB,CAAD,CAAhC;AAmCP,eAAevB,YAAY,CAACgC,OAA5B;AAEA,OAAO,MAAM;EAAE1B;AAAF,IAAiBN,YAAY,CAACiC,OAApC"},"metadata":{},"sourceType":"module"}